fastlane_version '2.0.0'

ProjectName = 'Cineaste'
Target_Folder_Name = 'build' 
DerivedDataPath = 'DerivedData'

Scheme = 'Cineaste App'
Scheme_UnitTests = 'Testing'
Scheme_UITests = 'Snapshot'

$version_number_to_set = '1.11.0'
$build_number_to_set = number_of_commits.to_s
$ipaName = "#{ProjectName}-#{$version_number_to_set}-#{$build_number_to_set}"

skip_docs

desc 'Runs all the tests'
lane :test do
  run_tests(
    code_coverage: true,
    derived_data_path: DerivedDataPath,
    device: 'iPhone 7',
    scheme: Scheme_UnitTests
  )
end

desc 'Make screenshots of app'
lane :screenshots do
  run_tests(
    clean: true,
    build_for_testing: true,
    derived_data_path: DerivedDataPath,
    scheme: Scheme
  )

  capture_ios_screenshots(
    app_identifier: 'de.spacepandas.ios.cineaste',
    configuration: 'Debug',
    derived_data_path: DerivedDataPath,
    output_directory: "#{Target_Folder_Name}/screenshots",
    scheme: Scheme_UITests,
    test_without_building: true
  )
end

desc 'Frame Screenshots'
lane :frame do
  frame_screenshots(
    path: "#{Target_Folder_Name}/screenshots"
  )
end

def buildApp
  time_string = Time.new.strftime('%Y.%m.%d')
  $ipaName = "#{$ipaName}-#{time_string}"

  build_ios_app(
    scheme: Scheme,
    output_name: $ipaName,
    output_directory: Target_Folder_Name
  )
end

desc 'Build the release app locally'
lane :build do
  buildApp
end

desc 'Build and upload the release app to TestFlight'
lane :beta do 
  increment_build_number(
    build_number: $build_number_to_set
  )

  increment_version_number(
    version_number: $version_number_to_set
  )

  buildApp

  upload_to_testflight(
    distribute_external: true,
    groups: 'Spacepandas',
    ipa: "#{Target_Folder_Name}/#{$ipaName}.ipa",
    notify_external_testers: true,
    username: 'tech@spacepandas.de'
  )

  sh("git commit -a -m \"Release version #{$version_number_to_set}\"")

  add_git_tag(tag: $version_number_to_set)

end
